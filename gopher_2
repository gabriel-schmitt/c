#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

#define MAXN 100
#define MAXM 100
#define MAXV 300

int adj[MAXV][MAXV];
int cap[MAXV][MAXV];
int visited[MAXV];

double gx[MAXN], gy[MAXN];
double hx[MAXM], hy[MAXM];

int n, m, s, v;
int S, T;

int main() {
    while(scanf("%d %d %d %d", &n, &m, &s, &v) != EOF) {
        S = 0;
        T = 1;
        int g_offset = 2;
        int h_offset = 2 + n;
        
        memset(adj, 0, sizeof(adj));
        memset(cap, 0, sizeof(cap));

        for (int i = 0; i < n; i++)
            scanf("%lf %lf", &gx[i], &gy[i]);
        for (int i = 0; i < m; i++)
            scanf("%lf %lf", &hx[i], &hy[i]);

        double max_dist = s * v;

        for (int i = 0; i < n; i++)
            add_edge(S, g_offset + i);

        for (int i = 0; i < m; i++)
            add_edge(h_offset + i, T);

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (dist(gx[i], gy[i], hx[j], hy[j]) <= max_dist) {
                    add_edge(g_offset + i, h_offset + j);
                }
            }
        }

        int escaped = dfs();
        printf("%d\n", n - escaped);
    }

    return 0;
}